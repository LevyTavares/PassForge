// sass/_components.scss

@use 'variables' as v;
@use 'mixins' as m;
@use 'sass:math';

// Display da Senha - Container principal do input e botão
.password-display {
    display: flex;
    margin-bottom: 30px;
    overflow: hidden; /* Manter este, ajuda no visual e arredondamento */
    position: relative;
    box-sizing: border-box;
    transition: border-color v.$transition-speed;
}

#passwordOutput {
    flex-grow: 1;
    padding: 15px 20px;
    font-size: 1.2rem;
    border: 2px solid var(--primary-color); /* Borda completa no input */
    border-right: none; /* Remove borda direita para se juntar ao botão */
    border-top-left-radius: v.$border-radius; /* Arredonda canto superior esquerdo */
    border-bottom-left-radius: v.$border-radius; /* Arredonda canto inferior esquerdo */
    outline: none;
    background-color: var(--password-input-background);
    color: var(--primary-color);
    font-weight: 600;
    text-align: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    box-sizing: border-box;

    body.dark-theme & {
        color: #eee;
        background-color: #ba68c8;
    }
}

#copyButton {
    @include m.button-styles; // Usa os estilos base de botão
    background-color: var(--secondary-color);
    border-radius: 0; // Remove arredondamento individual (bordas externas serão aplicadas abaixo)
    border: 2px solid var(--primary-color); /* Borda completa no botão */
    border-left: none; /* Remove borda esquerda para se juntar ao input */
    border-top-right-radius: v.$border-radius; /* Arredonda canto superior direito */
    border-bottom-right-radius: v.$border-radius; /* Arredonda canto inferior direito */
    width: 60px; /* Manter 60px para desktop, será ajustado em mobile */
    flex-shrink: 0;
    box-sizing: border-box;
    transition: background-color v.$transition-speed, border-color v.$transition-speed;

    // REMOVIDO: @include m.flex-center; daqui, pois será controlado pelo grid no mobile
    // Esta parte será adicionada no _responsive.scss para mobile

    svg {
        width: 24px;   /* Tamanho padrão do SVG no desktop */
        height: 24px;  /* Tamanho padrão do SVG no desktop */
        fill: none;
        stroke: white; /* Cor do ícone - garantir que seja branco */
        stroke-width: 2;
    }

    &:hover {
        background-color: var(--secondary-hover-color);
        border-color: var(--secondary-hover-color);
    }
}

// Opções
.options {
    text-align: left;
    margin-bottom: 30px;

    .option-group {
        margin-bottom: 20px;

        label {
            display: block;
            margin-bottom: 10px;
            color: var(--text-color); // Usando variável CSS
            font-weight: 600; // Mantendo o font-weight aqui
        }
    }

    .range-wrapper {
        display: flex;
        align-items: center;
        gap: 15px;

        #passwordLength {
            flex-grow: 1;
            -webkit-appearance: none;
            appearance: none;
            height: 8px;
            border-radius: 5px;
            background: var(--background-color); // Usando variável CSS
            outline: none;
            &::-webkit-slider-thumb {
                -webkit-appearance: none;
                appearance: none;
                width: 20px;
                height: 20px;
                border-radius: 50%;
                background: var(--primary-color); // Usando variável CSS
                cursor: pointer;
                border: 3px solid var(--card-background); // Usando variável CSS
                box-shadow: 0 0 5px var(--shadow-color); // Usando variável CSS
            }
            &::-moz-range-thumb {
                width: 20px;
                height: 20px;
                border-radius: 50%;
                background: var(--primary-color); // Usando variável CSS
                cursor: pointer;
                border: 3px solid var(--card-background); // Usando variável CSS
                box-shadow: 0 0 5px var(--shadow-color); // Usando variável CSS
            }
        }

        #lengthValue {
            font-size: 1.1rem;
            font-weight: 700;
            color: var(--primary-color); // Usando variável CSS
            min-width: 25px;
            text-align: right;
        }
    }

    .checkbox-group {
        display: flex;
        flex-direction: column;
        gap: 12px;

        label {
            display: flex;
            align-items: center;
            font-weight: 400; // Permanecendo 400 para o texto da label do checkbox
            cursor: pointer;

            input[type="checkbox"] {
                -webkit-appearance: none;
                appearance: none;
                width: 20px;
                height: 20px;
                border: 2px solid var(--primary-color); // Usando variável CSS
                border-radius: 4px;
                margin-right: 10px;
                cursor: pointer;
                @include m.flex-center; // Centraliza o checkmark
                transition: background-color v.$transition-speed, border-color v.$transition-speed; // Permanece variável SASS

                &:checked {
                    background-color: var(--primary-color); // Usando variável CSS
                    border-color: var(--primary-color); // Usando variável CSS

                    &::after {
                        content: '\2713';
                        color: white;
                        font-size: 16px;
                        line-height: 1;
                    }
                }
            }
        }
    }
}

// Botão de Gerar
#generateButton {
    @include m.button-styles;
    width: 100%;
}